package com.Ntranga.core.CLMS.entities;
// Generated 22 Dec, 2016 12:44:03 PM by Hibernate Tools 3.6.0


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DepartmentwiseWorkerAllocationDetailsInfo generated by hbm2java
 */
@Entity
@Table(name="departmentwise_worker_allocation_details_info"   
)
public class DepartmentwiseWorkerAllocationDetailsInfo  implements java.io.Serializable {


     private Integer workerAllocationInfoId;
     private PlantDetails plantDetails;
     private DepartmentDetails departmentDetails;
     private CustomerDetails customerDetails;
     private WorkAreaDetails workAreaDetails;
     private DepartmentwiseWorkerAllocationDetails departmentwiseWorkerAllocationDetails;
     private SectionDetails sectionDetails;
     private CompanyDetails companyDetails;
     private LocationDetails locationDetails;
     private int countryId;
     private String plannedOrAdhoc;
     private Date fromDate;
     private Date toDate;
     private Date transactionDate;
     private Integer createdBy;
     private Date createdDate;
     private Integer modifiedBy;
     private Date modifiedDate;
     private String requestStatus;
     private String comments;
     
     
    public DepartmentwiseWorkerAllocationDetailsInfo() {
    }

	
    public DepartmentwiseWorkerAllocationDetailsInfo(DepartmentDetails departmentDetails, CustomerDetails customerDetails, DepartmentwiseWorkerAllocationDetails departmentwiseWorkerAllocationDetails, CompanyDetails companyDetails, LocationDetails locationDetails, int countryId, Date transactionDate) {
        this.departmentDetails = departmentDetails;
        this.customerDetails = customerDetails;
        this.departmentwiseWorkerAllocationDetails = departmentwiseWorkerAllocationDetails;
        this.companyDetails = companyDetails;
        this.locationDetails = locationDetails;
        this.countryId = countryId;
        this.transactionDate = transactionDate;
    }
    public DepartmentwiseWorkerAllocationDetailsInfo(PlantDetails plantDetails, DepartmentDetails departmentDetails, CustomerDetails customerDetails, WorkAreaDetails workAreaDetails, DepartmentwiseWorkerAllocationDetails departmentwiseWorkerAllocationDetails, SectionDetails sectionDetails, CompanyDetails companyDetails, LocationDetails locationDetails, int countryId, String plannedOrAdhoc, Date fromDate, Date toDate, Date transactionDate, Integer createdBy, Date createdDate, Integer modifiedBy, Date modifiedDate) {
       this.plantDetails = plantDetails;
       this.departmentDetails = departmentDetails;
       this.customerDetails = customerDetails;
       this.workAreaDetails = workAreaDetails;
       this.departmentwiseWorkerAllocationDetails = departmentwiseWorkerAllocationDetails;
       this.sectionDetails = sectionDetails;
       this.companyDetails = companyDetails;
       this.locationDetails = locationDetails;
       this.countryId = countryId;
       this.plannedOrAdhoc = plannedOrAdhoc;
       this.fromDate = fromDate;
       this.toDate = toDate;
       this.transactionDate = transactionDate;
       this.createdBy = createdBy;
       this.createdDate = createdDate;
       this.modifiedBy = modifiedBy;
       this.modifiedDate = modifiedDate;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Worker_Allocation_Info_Id", unique=true, nullable=false)
    public Integer getWorkerAllocationInfoId() {
        return this.workerAllocationInfoId;
    }
    
    public void setWorkerAllocationInfoId(Integer workerAllocationInfoId) {
        this.workerAllocationInfoId = workerAllocationInfoId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Plant_Id")
    public PlantDetails getPlantDetails() {
        return this.plantDetails;
    }
    
    public void setPlantDetails(PlantDetails plantDetails) {
        this.plantDetails = plantDetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Department_Id", nullable=false)
    public DepartmentDetails getDepartmentDetails() {
        return this.departmentDetails;
    }
    
    public void setDepartmentDetails(DepartmentDetails departmentDetails) {
        this.departmentDetails = departmentDetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Customer_id", nullable=false)
    public CustomerDetails getCustomerDetails() {
        return this.customerDetails;
    }
    
    public void setCustomerDetails(CustomerDetails customerDetails) {
        this.customerDetails = customerDetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Work_Area_Id")
    public WorkAreaDetails getWorkAreaDetails() {
        return this.workAreaDetails;
    }
    
    public void setWorkAreaDetails(WorkAreaDetails workAreaDetails) {
        this.workAreaDetails = workAreaDetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Worker_Allocation_Id", nullable=false)
    public DepartmentwiseWorkerAllocationDetails getDepartmentwiseWorkerAllocationDetails() {
        return this.departmentwiseWorkerAllocationDetails;
    }
    
    public void setDepartmentwiseWorkerAllocationDetails(DepartmentwiseWorkerAllocationDetails departmentwiseWorkerAllocationDetails) {
        this.departmentwiseWorkerAllocationDetails = departmentwiseWorkerAllocationDetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Section_Id")
    public SectionDetails getSectionDetails() {
        return this.sectionDetails;
    }
    
    public void setSectionDetails(SectionDetails sectionDetails) {
        this.sectionDetails = sectionDetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Company_Id", nullable=false)
    public CompanyDetails getCompanyDetails() {
        return this.companyDetails;
    }
    
    public void setCompanyDetails(CompanyDetails companyDetails) {
        this.companyDetails = companyDetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Location_Id", nullable=false)
    public LocationDetails getLocationDetails() {
        return this.locationDetails;
    }
    
    public void setLocationDetails(LocationDetails locationDetails) {
        this.locationDetails = locationDetails;
    }

    
    @Column(name="Country_Id", nullable=false)
    public int getCountryId() {
        return this.countryId;
    }
    
    public void setCountryId(int countryId) {
        this.countryId = countryId;
    }

    
    @Column(name="Planned_Or_Adhoc", length=10)
    public String getPlannedOrAdhoc() {
        return this.plannedOrAdhoc;
    }
    
    public void setPlannedOrAdhoc(String plannedOrAdhoc) {
        this.plannedOrAdhoc = plannedOrAdhoc;
    }
    
    
    
    @Column(name="Comments", length=10)
    public String getComments() {
		return comments;
	}


	public void setComments(String comments) {
		this.comments = comments;
	}


	@Column(name="Request_Status", length=45)
    public String getRequestStatus() {
		return requestStatus;
	}


	public void setRequestStatus(String requestStatus) {
		this.requestStatus = requestStatus;
	}


	@Temporal(TemporalType.DATE)
    @Column(name="From_Date", length=10)
    public Date getFromDate() {
        return this.fromDate;
    }
    
    public void setFromDate(Date fromDate) {
        this.fromDate = fromDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="To_Date", length=10)
    public Date getToDate() {
        return this.toDate;
    }
    
    public void setToDate(Date toDate) {
        this.toDate = toDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="Transaction_Date", nullable=false, length=10)
    public Date getTransactionDate() {
        return this.transactionDate;
    }
    
    public void setTransactionDate(Date transactionDate) {
        this.transactionDate = transactionDate;
    }

    
    @Column(name="Created_By")
    public Integer getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(Integer createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Created_Date", length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    
    @Column(name="Modified_By")
    public Integer getModifiedBy() {
        return this.modifiedBy;
    }
    
    public void setModifiedBy(Integer modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Modified_Date", length=19)
    public Date getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(Date modifiedDate) {
        this.modifiedDate = modifiedDate;
    }




}


