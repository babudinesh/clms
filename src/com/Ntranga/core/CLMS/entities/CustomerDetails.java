package com.Ntranga.core.CLMS.entities;
// Generated Jun 16, 2016 7:00:29 PM by Hibernate Tools 3.6.0


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CustomerDetails generated by hbm2java
 */
@Entity
@Table(name="customer_details"
    
)
public class CustomerDetails  implements java.io.Serializable {


     private Integer customerId;
     private String customerCode;
     private int createdBy;
     private Date createdDate;
     private int modifiedBy;
     private Date modifiedDate;
     private Set<CompanyDetails> companyDetailses = new HashSet<CompanyDetails>(0);
     private Set<CustomerCountries> customerCountrieses = new HashSet<CustomerCountries>(0);
     private Set<CompanyDetailsInfo> companyDetailsInfos = new HashSet<CompanyDetailsInfo>(0);
     private Set<CompanyContact> companyContacts = new HashSet<CompanyContact>(0);
     private Set<CompanyAddress> companyAddresses = new HashSet<CompanyAddress>(0);
     private Set<CustomerContact> customerContacts = new HashSet<CustomerContact>(0);
     private Set<CustomerDetailsInfo> customerDetailsInfos = new HashSet<CustomerDetailsInfo>(0);
     private Set<CustomerIndustrySectorDetails> customerIndustrySectorDetailses = new HashSet<CustomerIndustrySectorDetails>(0);
     private Set<CustomerAddress> customerAddresses = new HashSet<CustomerAddress>(0);
     private Set<Shifts> shiftses = new HashSet<Shifts>(0);
     private Set<ShiftsDefine> shiftsDefines = new HashSet<ShiftsDefine>(0);
     
    public CustomerDetails() {
    }

	
    public CustomerDetails(String customerCode, int createdBy, Date createdDate, int modifiedBy, Date modifiedDate) {
        this.customerCode = customerCode;
        this.createdBy = createdBy;
        this.createdDate = createdDate;
        this.modifiedBy = modifiedBy;
        this.modifiedDate = modifiedDate;
    }
    public CustomerDetails(String customerCode, int createdBy, Date createdDate, int modifiedBy, Date modifiedDate, Set<CompanyDetails> companyDetailses, Set<CustomerCountries> customerCountrieses, Set<CompanyDetailsInfo> companyDetailsInfos, Set<CompanyContact> companyContacts, Set<CompanyAddress> companyAddresses, Set<CustomerContact> customerContacts, Set<CustomerDetailsInfo> customerDetailsInfos, Set<CustomerIndustrySectorDetails> customerIndustrySectorDetailses, Set<CustomerAddress> customerAddresses) {
       this.customerCode = customerCode;
       this.createdBy = createdBy;
       this.createdDate = createdDate;
       this.modifiedBy = modifiedBy;
       this.modifiedDate = modifiedDate;
       this.companyDetailses = companyDetailses;
       this.customerCountrieses = customerCountrieses;
       this.companyDetailsInfos = companyDetailsInfos;
       this.companyContacts = companyContacts;
       this.companyAddresses = companyAddresses;
       this.customerContacts = customerContacts;
       this.customerDetailsInfos = customerDetailsInfos;
       this.customerIndustrySectorDetailses = customerIndustrySectorDetailses;
       this.customerAddresses = customerAddresses;
    }
   
     public CustomerDetails(Integer customerId) {
    	 this.customerId = customerId;
	}
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Customer_Id", unique=true, nullable=false)
    public Integer getCustomerId() {
        return this.customerId;
    }
    
    public void setCustomerId(Integer customerId) {
        this.customerId = customerId;
    }

    
    @Column(name="Customer_Code", nullable=false, length=20)
    public String getCustomerCode() {
        return this.customerCode;
    }
    
    public void setCustomerCode(String customerCode) {
        this.customerCode = customerCode;
    }

    
    @Column(name="Created_By", nullable=false)
    public int getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(int createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Created_Date", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    
    @Column(name="Modified_By", nullable=false)
    public int getModifiedBy() {
        return this.modifiedBy;
    }
    
    public void setModifiedBy(int modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Modified_Date", nullable=false, length=19)
    public Date getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(Date modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<CompanyDetails> getCompanyDetailses() {
        return this.companyDetailses;
    }
    
    public void setCompanyDetailses(Set<CompanyDetails> companyDetailses) {
        this.companyDetailses = companyDetailses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<CustomerCountries> getCustomerCountrieses() {
        return this.customerCountrieses;
    }
    
    public void setCustomerCountrieses(Set<CustomerCountries> customerCountrieses) {
        this.customerCountrieses = customerCountrieses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<CompanyDetailsInfo> getCompanyDetailsInfos() {
        return this.companyDetailsInfos;
    }
    
    public void setCompanyDetailsInfos(Set<CompanyDetailsInfo> companyDetailsInfos) {
        this.companyDetailsInfos = companyDetailsInfos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<CompanyContact> getCompanyContacts() {
        return this.companyContacts;
    }
    
    public void setCompanyContacts(Set<CompanyContact> companyContacts) {
        this.companyContacts = companyContacts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<CompanyAddress> getCompanyAddresses() {
        return this.companyAddresses;
    }
    
    public void setCompanyAddresses(Set<CompanyAddress> companyAddresses) {
        this.companyAddresses = companyAddresses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<CustomerContact> getCustomerContacts() {
        return this.customerContacts;
    }
    
    public void setCustomerContacts(Set<CustomerContact> customerContacts) {
        this.customerContacts = customerContacts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<CustomerDetailsInfo> getCustomerDetailsInfos() {
        return this.customerDetailsInfos;
    }
    
    public void setCustomerDetailsInfos(Set<CustomerDetailsInfo> customerDetailsInfos) {
        this.customerDetailsInfos = customerDetailsInfos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<CustomerIndustrySectorDetails> getCustomerIndustrySectorDetailses() {
        return this.customerIndustrySectorDetailses;
    }
    
    public void setCustomerIndustrySectorDetailses(Set<CustomerIndustrySectorDetails> customerIndustrySectorDetailses) {
        this.customerIndustrySectorDetailses = customerIndustrySectorDetailses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<CustomerAddress> getCustomerAddresses() {
        return this.customerAddresses;
    }
    
    public void setCustomerAddresses(Set<CustomerAddress> customerAddresses) {
        this.customerAddresses = customerAddresses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<Shifts> getShiftses() {
        return this.shiftses;
    }
    
    public void setShiftses(Set<Shifts> shiftses) {
        this.shiftses = shiftses;
    }
    
@OneToMany(fetch=FetchType.LAZY, mappedBy="customerDetails")
    public Set<ShiftsDefine> getShiftsDefines() {
        return this.shiftsDefines;
    }
    
    public void setShiftsDefines(Set<ShiftsDefine> shiftsDefines) {
        this.shiftsDefines = shiftsDefines;
    }

}


