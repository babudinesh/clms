package com.Ntranga.core.CLMS.entities;
// Generated Aug 18, 2016 1:10:14 PM by Hibernate Tools 3.6.0

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AssignShiftPattern generated by hbm2java
 */
@Entity
@Table(name = "Worker_Advance_Amount_Taken")
public class WorkerAdvanceAmountTaken implements java.io.Serializable {

	private Integer workerAdvanceAmountTakenId;
	private CustomerDetails customerDetails;
	private CompanyDetails companyDetails;
	private WorkerDetails workerDetails;
	private VendorDetails vendorDetails;
	//private String isActive;
	private Integer createdBy;
	private Date createdDate;
	private Integer modifiedBy;
	private Date modifiedDate;
	private Date amountTakenDate;
	private String advanceAmountTaken;
	private Integer currency;
	private String purpose;
	private Integer noOfInstallmentsAllowed;
	private String remarks;
	//private String registerType;

	public WorkerAdvanceAmountTaken() {
	}

	
	
	public WorkerAdvanceAmountTaken(Integer workerAdvanceAmountTakenId) {
		this.workerAdvanceAmountTakenId = workerAdvanceAmountTakenId;
	}



	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "Worker_Advance_Amount_TakenId", unique = true, nullable = false)
	public Integer getWorkerAdvanceAmountTakenId() {
		return workerAdvanceAmountTakenId;
	}

	public void setWorkerAdvanceAmountTakenId(Integer workerAdvanceAmountTakenId) {
		this.workerAdvanceAmountTakenId = workerAdvanceAmountTakenId;
	}
	
	
	
	 @Column(name="Advance_Amount_Taken", nullable=false, length=50)
	public String getAdvanceAmountTaken() {
		return advanceAmountTaken;
	}

	public void setAdvanceAmountTaken(String advanceAmountTaken) {
		this.advanceAmountTaken = advanceAmountTaken;
	}
	
	/* @Column(name="Register_Type", nullable=false, length=50)
		public String getRegisterType() {
			return registerType;
		}

		public void setRegisterType(String registerType) {
			this.registerType = registerType;
		}
		*/
		

	 @Column(name="Currency", nullable = false)
	public Integer getCurrency() {
		return currency;
	}

	public void setCurrency(Integer currency) {
		this.currency = currency;
	}

	 @Column(name="Purpose", nullable=false, length=50)
	public String getPurpose() {
		return purpose;
	}

	public void setPurpose(String purpose) {
		this.purpose = purpose;
	}

	 @Column(name="No_Of_Installments_Allowed",  length=50)
	public Integer getNoOfInstallmentsAllowed() {
		return noOfInstallmentsAllowed;
	}

	public void setNoOfInstallmentsAllowed(Integer noOfInstallmentsAllowed) {
		this.noOfInstallmentsAllowed = noOfInstallmentsAllowed;
	}

	 @Column(name="Remarks",  length=50)
	public String getRemarks() {
		return remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}
	
	
	
	
	

	@Temporal(TemporalType.DATE)
	@Column(name = "Amount_Taken_Date", nullable = false, length = 10)
	public Date getAmountTakenDate() {
		return amountTakenDate;
	}

	public void setAmountTakenDate(Date amountTakenDate) {
		this.amountTakenDate = amountTakenDate;
	}

	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Customer_Id", nullable = false)
	public CustomerDetails getCustomerDetails() {
		return this.customerDetails;
	}

	public void setCustomerDetails(CustomerDetails customerDetails) {
		this.customerDetails = customerDetails;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Company_Id", nullable = false)
	public CompanyDetails getCompanyDetails() {
		return this.companyDetails;
	}

	public void setCompanyDetails(CompanyDetails companyDetails) {
		this.companyDetails = companyDetails;
	}
	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Vendor_Id", nullable = false)
	public VendorDetails getVendorDetails() {
		return this.vendorDetails;
	}

	public void setVendorDetails(VendorDetails vendorDetails) {
		this.vendorDetails = vendorDetails;
	}
	
	

	/*@Column(name = "Is_Active")
	public String getIsActive() {
		return this.isActive;
	}

	public void setIsActive(String isActive) {
		this.isActive = isActive;
	}*/

	@Column(name = "Created_By", nullable = false)
	public Integer getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(Integer createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Created_date", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "Modified_By", nullable = false)
	public Integer getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(Integer modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Modified_Date", nullable = false, length = 19)
	public Date getModifiedDate() {
		return this.modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		this.modifiedDate = modifiedDate;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Worker_id")
	public WorkerDetails getWorkerDetails() {
		return this.workerDetails;
	}

	public void setWorkerDetails(WorkerDetails workerDetails) {
		this.workerDetails = workerDetails;
	}

}
