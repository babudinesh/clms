package com.Ntranga.core.CLMS.entities;
// Generated 20 Jul, 2016 1:01:39 PM by Hibernate Tools 3.6.0


import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * WorkerReference generated by hbm2java
 */
@Entity
@Table(name="worker_reference"
 
)
public class WorkerReference  implements java.io.Serializable {


     private Integer referenceId;
     private CustomerDetails customerId;
     private CompanyDetails companyId;
     private VendorDetails vendorId;
     private WorkerDetails workerId;
     private String name;
     private String email;
     private String relationship;
     private String designation;
     private String contactNumber;
     private int createdBy;
     private Date createdDate;
     private int modifiedBy;
     private Date modifiedDate;

    public WorkerReference() {
    }

	
    public WorkerReference(CustomerDetails customerId, CompanyDetails companyId, VendorDetails vendorId, WorkerDetails workerId, int createdBy, Date createdDate, int modifiedBy, Date modifiedDate) {
        this.customerId = customerId;
        this.companyId = companyId;
        this.vendorId = vendorId;
        this.workerId = workerId;
        this.createdBy = createdBy;
        this.createdDate = createdDate;
        this.modifiedBy = modifiedBy;
        this.modifiedDate = modifiedDate;
    }
    public WorkerReference(CustomerDetails customerId, CompanyDetails companyId, VendorDetails vendorId, WorkerDetails workerId, String name, String relationship, String email, String designation, String contactNumber, int createdBy, Date createdDate, int modifiedBy, Date modifiedDate) {
       this.customerId = customerId;
       this.companyId = companyId;
       this.vendorId = vendorId;
       this.workerId = workerId;
       this.name = name;
       this.relationship = relationship;
       this.designation = designation;
       this.contactNumber = contactNumber;
       this.createdBy = createdBy;
       this.createdDate = createdDate;
       this.modifiedBy = modifiedBy;
       this.modifiedDate = modifiedDate;
       this.email = email;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Reference_Id", unique=true, nullable=false)
    public Integer getReferenceId() {
        return this.referenceId;
    }
    
    public void setReferenceId(Integer referenceId) {
        this.referenceId = referenceId;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Customer_Id", nullable=false)
    public CustomerDetails getCustomerId() {
        return this.customerId;
    }
    
    public void setCustomerId(CustomerDetails customerId) {
        this.customerId = customerId;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Company_Id", nullable=false)
    public CompanyDetails getCompanyId() {
        return this.companyId;
    }
    
    public void setCompanyId(CompanyDetails companyId) {
        this.companyId = companyId;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Vendor_Id", nullable=false)
    public VendorDetails getVendorId() {
        return this.vendorId;
    }
    
    public void setVendorId(VendorDetails vendorId) {
        this.vendorId = vendorId;
    }

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Worker_Id", nullable=false)
    public WorkerDetails getWorkerId() {
        return this.workerId;
    }
    
    public void setWorkerId(WorkerDetails workerId) {
        this.workerId = workerId;
    }

    
    @Column(name="Name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="Relationship", length=45)
    public String getRelationship() {
        return this.relationship;
    }
    
    public void setRelationship(String relationship) {
        this.relationship = relationship;
    }

    
    @Column(name="Designation", length=45)
    public String getDesignation() {
        return this.designation;
    }
    
    public void setDesignation(String designation) {
        this.designation = designation;
    }

    
    @Column(name="Contact_Number", length=45)
    public String getContactNumber() {
        return this.contactNumber;
    }
    
    public void setContactNumber(String contactNumber) {
        this.contactNumber = contactNumber;
    }

    
    @Column(name="Created_By", nullable=false)
    public int getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(int createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Created_Date", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    
    @Column(name="Modified_By", nullable=false)
    public int getModifiedBy() {
        return this.modifiedBy;
    }
    
    public void setModifiedBy(int modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Modified_Date", nullable=false, length=19)
    public Date getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(Date modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    @Column(name="Email", length=45)
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}




}


