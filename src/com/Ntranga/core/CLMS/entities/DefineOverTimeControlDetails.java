package com.Ntranga.core.CLMS.entities;
// Generated 22 Jun, 2016 4:22:24 PM by Hibernate Tools 3.6.0


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DefineOverTimeControlDetails generated by hbm2java
 */
@Entity
@Table(name="Define_OverTime_Control_Details"
    
)
public class DefineOverTimeControlDetails  implements java.io.Serializable {


     private Integer defineOverTimeDetailsId;
     private CustomerDetails customerDetails;
     private CompanyDetails companyDetails;
     private String overTimeControlCode;
     private String isActive;
     private int createdBy;
     private Date createdDate;
     private int modifiedBy;
     private Date modifiedDate;
     

    public DefineOverTimeControlDetails() {
    }

    public DefineOverTimeControlDetails(Integer defineOverTimeDetailsId) {
    	this.defineOverTimeDetailsId = defineOverTimeDetailsId;
    }
	
    public DefineOverTimeControlDetails(String isActive, int createdBy, Date createdDate, int modifiedBy, Date modifiedDate) {
        this.isActive = isActive;
        this.createdBy = createdBy;
        this.createdDate = createdDate;
        this.modifiedBy = modifiedBy;
        this.modifiedDate = modifiedDate;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="Define_OverTime_Details_Id", unique=true, nullable=false)
     public Integer getDefineOverTimeDetailsId() {
 		return defineOverTimeDetailsId;
 	}

 	public void setDefineOverTimeDetailsId(Integer defineOverTimeDetailsId) {
 		this.defineOverTimeDetailsId = defineOverTimeDetailsId;
 	}
     
     
     
@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Customer_Id")
    public CustomerDetails getCustomerDetails() {
        return this.customerDetails;
    }
    
    

	public void setCustomerDetails(CustomerDetails customerDetails) {
        this.customerDetails = customerDetails;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Company_Id")
    public CompanyDetails getCompanyDetails() {
        return this.companyDetails;
    }
    
    public void setCompanyDetails(CompanyDetails companyDetails) {
        this.companyDetails = companyDetails;
    }

    @Column(name="overTime_Control_Code", length=45)
    public String getOverTimeControlCode() {
		return overTimeControlCode;
	}

	public void setOverTimeControlCode(String overTimeControlCode) {
		this.overTimeControlCode = overTimeControlCode;
	}

    @Column(name="Is_Active", nullable=false, length=2)
    public String getIsActive() {
        return this.isActive;
    }
    
    public void setIsActive(String isActive) {
        this.isActive = isActive;
    }

    
    @Column(name="Created_By", nullable=false)
    public int getCreatedBy() {
        return this.createdBy;
    }
    
    public void setCreatedBy(int createdBy) {
        this.createdBy = createdBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Created_date", nullable=false, length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }

    
    @Column(name="Modified_By", nullable=false)
    public int getModifiedBy() {
        return this.modifiedBy;
    }
    
    public void setModifiedBy(int modifiedBy) {
        this.modifiedBy = modifiedBy;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="Modified_Date", nullable=false, length=19)
    public Date getModifiedDate() {
        return this.modifiedDate;
    }
    
    public void setModifiedDate(Date modifiedDate) {
        this.modifiedDate = modifiedDate;
    }


}


